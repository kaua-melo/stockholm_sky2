{"ast":null,"code":"import _slicedToArray from\"/Users/k1/Desktop/stockholm_sky_gitpages2/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import*as d3 from\"d3\";import{getYear}from\"../services/cloud_data_functions\";import\"../css/D3YearGrid.css\";import MultiRangeSlider from\"./MultiRangeSlider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function D3YearGrid(props){var d3Grid=useRef();// const [data, setData] = useState([]);\n// 1 = day_number\n// 2 = radiation/c_index\n// 3 = months\n// 4 = play song\nvar _useState=useState(1),_useState2=_slicedToArray(_useState,2),sortMethod=_useState2[0],setSortMethod=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),svg=_useState4[0],setSvg=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),recs=_useState6[0],setRecs=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),nRecsPerRow=_useState8[0],setNRecsPerRow=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),gridGap=_useState10[0],setGridGap=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),monthsLength=_useState12[0],setMonthsLength=_useState12[1];// const [indexThreshold, setIndexThreshold] = useState(100);\nvar _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),filterMin=_useState14[0],setFilterMin=_useState14[1];var _useState15=useState(100),_useState16=_slicedToArray(_useState15,2),filterMax=_useState16[0],setFilterMax=_useState16[1];useEffect(function(){// The data should be all ready when we load this component :)\n// console.log(\"Inside D3YearGrid!\");\n// console.log(props.data);\n// console.log(\"year: \" + props.year);\nvar margin={top:0,right:0,bottom:0,left:0};var width=parseInt(d3.select(\".d3Container\").style(\"width\"));// const height = parseInt(d3.select(\".d3Container\").style(\"height\"));\nvar height=1*width;var gridGapX=0;var gridGapY=0;setGridGap({x:gridGapX,y:gridGapY});// set up the svg\nvar svg_temp=d3.select(d3Grid.current).attr(\"width\",width-margin.left-margin.right).attr(\"height\",height-margin.top-margin.bottom).attr(\"class\",\"D3Svg\")// .append(\"g\")\n.attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");setSvg(svg_temp);var svg_width=width;var n_recs_per_row=20;var rec_w=Math.floor(0.7*svg_width/n_recs_per_row);var rec_h=rec_w;setNRecsPerRow(n_recs_per_row);setRecs({width:rec_w,height:rec_h});// Add the rectangles\nsvg_temp.selectAll(\"rect\")// There's no 'rect' to select. But this is how we do to fill the svg with 'rects'.\n.data(props.data)// here we load the data\n.enter().append(\"rect\")// .enter().append() -> for each datapoint in the dataset, add a 'rect'.\n.attr(\"width\",rec_w).attr(\"height\",rec_h).attr(\"x\",function(d,i){return i%n_recs_per_row*(rec_w+gridGapX)+0.15*svg_width;}).attr(\"y\",function(d,i){return Math.floor(i/n_recs_per_row)*(rec_h+gridGapY)+0.15*svg_width;}).attr(\"fill\",function(d,i){var bright_color=[100,146,230];var dark_color=[99,112,124];var factor=Math.floor(d.c_index/10)*10;// hard coding colors:\nvar color=[];if(factor<10){// 1.jpg\ncolor=[100,146,230];}else if(factor>=10&&factor<20){// 2.jpg\ncolor=[99,143,224];}else if(factor>=20&&factor<30){// 3.jpg\ncolor=[96,142,214];}else if(factor>=30&&factor<40){// 4.jpg\ncolor=[94,138,204];}else if(factor>=40&&factor<50){// 5.jpg\ncolor=[94,136,193];}else if(factor>=50&&factor<60){// 6.jpg\ncolor=[93,131,182];}else if(factor>=60&&factor<70){// 7.jpg\ncolor=[93,128,170];}else if(factor>=70&&factor<80){// 8.jpg\ncolor=[95,124,154];}else if(factor>=80&&factor<90){// 9.jpg\ncolor=[97,118,138];}else if(factor>=90){// 10.jpg\ncolor=[99,112,124];}return\"rgba(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\", 1)\";}).style(\"stroke-opacity\",1)// set the stroke opacity\n.style(\"stroke\",\"black\")// set the line colour\n.style(\"stroke-width\",0.5)// set the stroke width\n.html(function(d,i){return d.day_number;});var monthNames=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];// Adding month labels\nsvg_temp.selectAll(\"text\").data(monthNames).enter().append(\"text\").text(function(d){return d;}).attr(\"x\",-100).attr(\"y\",function(d,i){return 130+i*45;});// We need to check if the year is a leap year because in that case the month\n// of february has 29 days instead of 28. This will be essential for sorting\n// the months visually.\nif(props.data.length===366){setMonthsLength({1:31,2:29,// February has 29 days in leap years\n3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31});}else if(props.data.length===365){setMonthsLength({1:31,2:28,// February has 28 days in non-leap years\n3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31});}},[]);function handleSortLight(){// console.log(\"Sort Light\");\nif(sortMethod!==2){// If the setState already dumped the dvg data into our svg variable\nif(svg){var svg_width=svg.style(\"width\").replace(\"px\",\"\");svg.selectAll(\"rect\").sort(function(x,y){return d3.ascending(x.c_index,y.c_index);}).transition().duration(2000).attr(\"width\",recs.width).attr(\"height\",recs.height).attr(\"x\",function(d,i){return i%nRecsPerRow*(recs.width+gridGap.x)+0.15*svg_width;}).attr(\"y\",function(d,i){// console.log(Math.floor(i / 33));\nreturn Math.floor(i/nRecsPerRow)*(recs.height+gridGap.y)+0.15*svg_width;});// Hiding month labels\nsvg.selectAll(\"text\").transition().duration(2000).attr(\"x\",-100).attr(\"y\",function(d,i){return 130+i*45;});}setSortMethod(2);}}function handleSortDay(){// console.log(\"Sort Day\");\nif(sortMethod!==1){// If the setState already dumped the dvg data into our svg variable\nif(svg){var svg_width=svg.style(\"width\").replace(\"px\",\"\");svg.selectAll(\"rect\").sort(function(x,y){return d3.ascending(x.day_number,y.day_number);}).transition().duration(2000).attr(\"width\",recs.width).attr(\"height\",recs.height).attr(\"x\",function(d,i){return i%nRecsPerRow*(recs.width+gridGap.x)+0.15*svg_width;}).attr(\"y\",function(d,i){// console.log(Math.floor(i / 33));\nreturn Math.floor(i/nRecsPerRow)*(recs.height+gridGap.y)+0.15*svg_width;});// Hiding month labels\nsvg.selectAll(\"text\").transition().duration(2000).attr(\"x\",-100).attr(\"y\",function(d,i){return 130+i*45;});setSortMethod(1);}}}function handleSortMonth(){console.log(\"Sort Month\");if(sortMethod!==3){// If the setState already dumped the dvg data into our svg variable\nif(svg){console.log(\"Group Month!\");var svg_width=svg.style(\"width\").replace(\"px\",\"\");svg.selectAll(\"rect\").sort(function(x,y){return d3.ascending(x.day_number,y.day_number);}).transition().duration(2000).attr(\"width\",recs.width).attr(\"height\",recs.height).attr(\"x\",function(d,i){// This will be useful for knowing how to distribute the\n//  squares in months. We'll need this logic becausse there are\n//  leap years, where the month of February has 29 days.\nvar summedDaysPreviousMonth=0;for(var m=1;m<d.month;m++){summedDaysPreviousMonth+=monthsLength[m];}// January\nif(d.month===1){return i%6*recs.width+0.05*svg_width;}// February\nelse if(d.month===2){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+7*recs.width;}// March\nelse if(d.month===3){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+14*recs.width;}// April\nelse if(d.month===4){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+21*recs.width;}// May\nelse if(d.month===5){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width;}// Jun\nelse if(d.month===6){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+7*recs.width;}// July\nelse if(d.month===7){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+14*recs.width;}// August\nelse if(d.month===8){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+21*recs.width;}// September\nelse if(d.month===9){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width;}// October\nelse if(d.month===10){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+7*recs.width;}// November\nelse if(d.month===11){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+14*recs.width;}// December\nelse if(d.month===12){return(i-summedDaysPreviousMonth)%6*recs.width+0.05*svg_width+21*recs.width;}else{return 500;}}).attr(\"y\",function(d,i){// This will be useful for knowing how to distribute the\n//  squares in months. We'll need this logic becausse there are\n//  leap years, where the month of February has 29 days.\nvar summedDaysPreviousMonth=0;for(var m=1;m<d.month;m++){summedDaysPreviousMonth+=monthsLength[m];}// January\nif(d.month===1){return Math.floor(i/6)*recs.height+0.05*svg_width;}// February\nelse if(d.month===2){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width;}// March\nelse if(d.month===3){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width;}// April\nelse if(d.month===4){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width;}// May\nelse if(d.month===5){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+9*recs.height;}// June\nelse if(d.month===6){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+9*recs.height;}// July\nelse if(d.month===7){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+9*recs.height;}// August\nelse if(d.month===8){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+9*recs.height;}// September\nelse if(d.month===9){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+18*recs.height;}// October\nelse if(d.month===10){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+18*recs.height;}// November\nelse if(d.month===11){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+18*recs.height;}// Dececmber\nelse if(d.month===12){return Math.floor((i-summedDaysPreviousMonth)/6)*recs.height+0.05*svg_width+18*recs.height;}});// Writing months names\nsvg.selectAll(\"text\").transition().duration(2000).attr(\"x\",function(d,i){// if (d === \"January\") {\nif(i===0){return 0.05*svg_width;// } else if (d === \"February\") {\n}else if(i===1){return 0.05*svg_width+7*recs.width;// } else if (d === \"March\") {\n}else if(i===2){return 0.05*svg_width+14*recs.width;// } else if (d === \"April\") {\n}else if(i===3){return 0.05*svg_width+21*recs.width;}// 2nd row\n// else if (d === \"May\") {\nelse if(i===4){return 0.05*svg_width;// } else if (d === \"June\") {\n}else if(i===5){return 0.05*svg_width+7*recs.width;// } else if (d === \"July\") {\n}else if(i===6){return 0.05*svg_width+14*recs.width;// } else if (d === \"August\") {\n}else if(i===7){return 0.05*svg_width+21*recs.width;}// 3rd row\n// else if (d === \"September\") {\nelse if(i===8){return 0.05*svg_width;// } else if (d === \"October\") {\n}else if(i===9){return 0.05*svg_width+7*recs.width;// } else if (d === \"November\") {\n}else if(i===10){return 0.05*svg_width+14*recs.width;// } else if (d === \"December\") {\n}else if(i===11){return 0.05*svg_width+21*recs.width;}}).attr(\"y\",function(d,i){// if (d === \"January\") {\nif(i===0){return 0.05*svg_width-10;// } else if (d === \"February\") {\n}else if(i===1){return 0.05*svg_width-10;// } else if (d === \"March\") {\n}else if(i===2){return 0.05*svg_width-10;// } else if (d === \"April\") {\n}else if(i===3){return 0.05*svg_width-10;}// 2nd row\n// else if (d === \"May\") {\nelse if(i===4){return 0.05*svg_width+9*recs.height-10;// } else if (d === \"June\") {\n}else if(i===5){return 0.05*svg_width+9*recs.height-10;// } else if (d === \"July\") {\n}else if(i===6){return 0.05*svg_width+9*recs.height-10;// } else if (d === \"August\") {\n}else if(i===7){return 0.05*svg_width+9*recs.height-10;}// 3rd row\n// else if (d === \"September\") {\nelse if(i===8){return 0.05*svg_width+18*recs.height-10;// } else if (d === \"October\") {\n}else if(i===9){return 0.05*svg_width+18*recs.height-10;// } else if (d === \"November\") {\n}else if(i===10){return 0.05*svg_width+18*recs.height-10;// } else if (d === \"December\") {\n}else if(i===11){return 0.05*svg_width+18*recs.height-10;}});}setSortMethod(3);}}// function handleSlideChange(event) {\nfunction handleSlideChange(min,max){// console.log(\"Slide changed: \" + event.target.value);\nif(svg){// setIndexThreshold(event.target.value);\n// Setting the filter variables\nsetFilterMin(min);setFilterMax(max);// This is the sample color to be displayed. So the user knows what she/he is filtering. What does 10% of cloud mean?? There's a need for a photo there.\n// // Hard coding colors:\n// const radiation_filter_factor = event.target.value;\n// var color = [];\n// if (radiation_filter_factor < 10) {\n//   // 1.jpg\n//   color = [100, 146, 230];\n// } else if (\n//   radiation_filter_factor >= 10 &&\n//   radiation_filter_factor < 20\n// ) {\n//   // 2.jpg\n//   color = [99, 143, 224];\n// } else if (\n//   radiation_filter_factor >= 20 &&\n//   radiation_filter_factor < 30\n// ) {\n//   // 3.jpg\n//   color = [96, 142, 214];\n// } else if (\n//   radiation_filter_factor >= 30 &&\n//   radiation_filter_factor < 40\n// ) {\n//   // 4.jpg\n//   color = [94, 138, 204];\n// } else if (\n//   radiation_filter_factor >= 40 &&\n//   radiation_filter_factor < 50\n// ) {\n//   // 5.jpg\n//   color = [94, 136, 193];\n// } else if (\n//   radiation_filter_factor >= 50 &&\n//   radiation_filter_factor < 60\n// ) {\n//   // 6.jpg\n//   color = [93, 131, 182];\n// } else if (\n//   radiation_filter_factor >= 60 &&\n//   radiation_filter_factor < 70\n// ) {\n//   // 7.jpg\n//   color = [93, 128, 170];\n// } else if (\n//   radiation_filter_factor >= 70 &&\n//   radiation_filter_factor < 80\n// ) {\n//   // 8.jpg\n//   color = [95, 124, 154];\n// } else if (\n//   radiation_filter_factor >= 80 &&\n//   radiation_filter_factor < 90\n// ) {\n//   // 9.jpg\n//   color = [97, 118, 138];\n// } else if (radiation_filter_factor >= 90) {\n//   // 10.jpg\n//   color = [99, 112, 124];\n// }\n// // Updating the color of the sample\n// document.getElementById(\"color_sample\").style.backgroundColor =\n//   \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \")\";\n// Changing the colors of the squares\nsvg.selectAll(\"rect\").transition().duration(800).attr(\"fill\",function(d,i){var cell_radiation_factor=Math.floor(d.c_index/10)*10;var color=[];// If the radiation value of the cell is smaller than the\n//  radiation velue of the threshold (in the slide), we going\n//  to fill it with black\n// if (cell_radiation_factor > radiation_filter_factor) {\nif(cell_radiation_factor<min||cell_radiation_factor>max){// color = [0, 0, 0];\ncolor=[255,255,255];}// Otherwise we fill it with the proper color\nelse{if(cell_radiation_factor<10){// 1.jpg\ncolor=[100,146,230];}else if(cell_radiation_factor>=10&&cell_radiation_factor<20){// 2.jpg\ncolor=[99,143,224];}else if(cell_radiation_factor>=20&&cell_radiation_factor<30){// 3.jpg\ncolor=[96,142,214];}else if(cell_radiation_factor>=30&&cell_radiation_factor<40){// 4.jpg\ncolor=[94,138,204];}else if(cell_radiation_factor>=40&&cell_radiation_factor<50){// 5.jpg\ncolor=[94,136,193];}else if(cell_radiation_factor>=50&&cell_radiation_factor<60){// 6.jpg\ncolor=[93,131,182];}else if(cell_radiation_factor>=60&&cell_radiation_factor<70){// 7.jpg\ncolor=[93,128,170];}else if(cell_radiation_factor>=70&&cell_radiation_factor<80){// 8.jpg\ncolor=[95,124,154];}else if(cell_radiation_factor>=80&&cell_radiation_factor<90){// 9.jpg\ncolor=[97,118,138];}else if(cell_radiation_factor>=90){// 10.jpg\ncolor=[99,112,124];}}return\"rgba(\"+color[0]+\",\"+color[1]+\",\"+color[2]+\", 1)\";});}}function handlePlaySong(){setSortMethod(4);}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid_controlers\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:sortMethod===2?\"sortingButton selectedButton\":\"sortingButton\",onClick:handleSortLight,children:\"Sort Light\"}),/*#__PURE__*/_jsx(\"button\",{className:sortMethod===1?\"sortingButton selectedButton\":\"sortingButton\",onClick:handleSortDay,children:\"Sort Date\"}),/*#__PURE__*/_jsx(\"button\",{className:sortMethod===3?\"sortingButton selectedButton\":\"sortingButton\",onClick:handleSortMonth,children:\"Group Months\"}),/*#__PURE__*/_jsx(\"button\",{className:sortMethod===4?\"sortingButton selectedButton musicSymbol\":\"sortingButton musicSymbol\",onClick:handlePlaySong,children:\"\\u266B\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"slidecontainer\",children:/*#__PURE__*/_jsx(MultiRangeSlider,{min:0,max:100,onChange:handleSlideChange})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d3Container\",children:/*#__PURE__*/_jsx(\"svg\",{ref:d3Grid})})]});}export default D3YearGrid;","map":{"version":3,"sources":["/Users/k1/Desktop/stockholm_sky_gitpages2/app/src/hooks/D3YearGrid.jsx"],"names":["React","useEffect","useRef","useState","d3","getYear","MultiRangeSlider","D3YearGrid","props","d3Grid","sortMethod","setSortMethod","svg","setSvg","recs","setRecs","nRecsPerRow","setNRecsPerRow","gridGap","setGridGap","monthsLength","setMonthsLength","filterMin","setFilterMin","filterMax","setFilterMax","margin","top","right","bottom","left","width","parseInt","select","style","height","gridGapX","gridGapY","x","y","svg_temp","current","attr","svg_width","n_recs_per_row","rec_w","Math","floor","rec_h","selectAll","data","enter","append","d","i","bright_color","dark_color","factor","c_index","color","html","day_number","monthNames","text","length","handleSortLight","replace","sort","ascending","transition","duration","handleSortDay","handleSortMonth","console","log","summedDaysPreviousMonth","m","month","handleSlideChange","min","max","cell_radiation_factor","handlePlaySong"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nimport { getYear } from \"../services/cloud_data_functions\";\n\nimport \"../css/D3YearGrid.css\";\n\nimport MultiRangeSlider from \"./MultiRangeSlider\";\n\nfunction D3YearGrid(props) {\n  const d3Grid = useRef();\n  // const [data, setData] = useState([]);\n\n  // 1 = day_number\n  // 2 = radiation/c_index\n  // 3 = months\n  // 4 = play song\n  const [sortMethod, setSortMethod] = useState(1);\n  const [svg, setSvg] = useState(null);\n  const [recs, setRecs] = useState({});\n  const [nRecsPerRow, setNRecsPerRow] = useState(null);\n  const [gridGap, setGridGap] = useState({});\n  const [monthsLength, setMonthsLength] = useState({});\n  // const [indexThreshold, setIndexThreshold] = useState(100);\n  const [filterMin, setFilterMin] = useState(0);\n  const [filterMax, setFilterMax] = useState(100);\n\n  useEffect(() => {\n    // The data should be all ready when we load this component :)\n    // console.log(\"Inside D3YearGrid!\");\n    // console.log(props.data);\n    // console.log(\"year: \" + props.year);\n\n    const margin = { top: 0, right: 0, bottom: 0, left: 0 };\n    const width = parseInt(d3.select(\".d3Container\").style(\"width\"));\n    // const height = parseInt(d3.select(\".d3Container\").style(\"height\"));\n    const height = 1 * width;\n    const gridGapX = 0;\n    const gridGapY = 0;\n    setGridGap({ x: gridGapX, y: gridGapY });\n\n    // set up the svg\n    const svg_temp = d3\n      .select(d3Grid.current)\n      .attr(\"width\", width - margin.left - margin.right)\n      .attr(\"height\", height - margin.top - margin.bottom)\n      .attr(\"class\", \"D3Svg\")\n      // .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    setSvg(svg_temp);\n\n    var svg_width = width;\n    var n_recs_per_row = 20;\n    var rec_w = Math.floor((0.7 * svg_width) / n_recs_per_row);\n    var rec_h = rec_w;\n    setNRecsPerRow(n_recs_per_row);\n    setRecs({ width: rec_w, height: rec_h });\n\n    // Add the rectangles\n    svg_temp\n      .selectAll(\"rect\") // There's no 'rect' to select. But this is how we do to fill the svg with 'rects'.\n      .data(props.data) // here we load the data\n      .enter()\n      .append(\"rect\") // .enter().append() -> for each datapoint in the dataset, add a 'rect'.\n      .attr(\"width\", rec_w)\n      .attr(\"height\", rec_h)\n      .attr(\"x\", function (d, i) {\n        return (i % n_recs_per_row) * (rec_w + gridGapX) + 0.15 * svg_width;\n      })\n      .attr(\"y\", function (d, i) {\n        return (\n          Math.floor(i / n_recs_per_row) * (rec_h + gridGapY) + 0.15 * svg_width\n        );\n      })\n      .attr(\"fill\", function (d, i) {\n        var bright_color = [100, 146, 230];\n        var dark_color = [99, 112, 124];\n\n        var factor = Math.floor(d.c_index / 10) * 10;\n\n        // hard coding colors:\n        var color = [];\n        if (factor < 10) {\n          // 1.jpg\n          color = [100, 146, 230];\n        } else if (factor >= 10 && factor < 20) {\n          // 2.jpg\n          color = [99, 143, 224];\n        } else if (factor >= 20 && factor < 30) {\n          // 3.jpg\n          color = [96, 142, 214];\n        } else if (factor >= 30 && factor < 40) {\n          // 4.jpg\n          color = [94, 138, 204];\n        } else if (factor >= 40 && factor < 50) {\n          // 5.jpg\n          color = [94, 136, 193];\n        } else if (factor >= 50 && factor < 60) {\n          // 6.jpg\n          color = [93, 131, 182];\n        } else if (factor >= 60 && factor < 70) {\n          // 7.jpg\n          color = [93, 128, 170];\n        } else if (factor >= 70 && factor < 80) {\n          // 8.jpg\n          color = [95, 124, 154];\n        } else if (factor >= 80 && factor < 90) {\n          // 9.jpg\n          color = [97, 118, 138];\n        } else if (factor >= 90) {\n          // 10.jpg\n          color = [99, 112, 124];\n        }\n        return \"rgba(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \", 1)\";\n      })\n      .style(\"stroke-opacity\", 1) // set the stroke opacity\n      .style(\"stroke\", \"black\") // set the line colour\n      .style(\"stroke-width\", 0.5) // set the stroke width\n\n      .html(function (d, i) {\n        return d.day_number;\n      });\n\n    var monthNames = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n\n    // Adding month labels\n    svg_temp\n      .selectAll(\"text\")\n      .data(monthNames)\n      .enter()\n      .append(\"text\")\n      .text(function (d) {\n        return d;\n      })\n      .attr(\"x\", -100)\n      .attr(\"y\", function (d, i) {\n        return 130 + i * 45;\n      });\n\n    // We need to check if the year is a leap year because in that case the month\n    // of february has 29 days instead of 28. This will be essential for sorting\n    // the months visually.\n\n    if (props.data.length === 366) {\n      setMonthsLength({\n        1: 31,\n        2: 29, // February has 29 days in leap years\n        3: 31,\n        4: 30,\n        5: 31,\n        6: 30,\n        7: 31,\n        8: 31,\n        9: 30,\n        10: 31,\n        11: 30,\n        12: 31,\n      });\n    } else if (props.data.length === 365) {\n      setMonthsLength({\n        1: 31,\n        2: 28, // February has 28 days in non-leap years\n        3: 31,\n        4: 30,\n        5: 31,\n        6: 30,\n        7: 31,\n        8: 31,\n        9: 30,\n        10: 31,\n        11: 30,\n        12: 31,\n      });\n    }\n  }, []);\n\n  function handleSortLight() {\n    // console.log(\"Sort Light\");\n\n    if (sortMethod !== 2) {\n      // If the setState already dumped the dvg data into our svg variable\n      if (svg) {\n        let svg_width = svg.style(\"width\").replace(\"px\", \"\");\n\n        svg\n          .selectAll(\"rect\")\n          .sort(function (x, y) {\n            return d3.ascending(x.c_index, y.c_index);\n          })\n          .transition()\n          .duration(2000)\n          .attr(\"width\", recs.width)\n          .attr(\"height\", recs.height)\n          .attr(\"x\", function (d, i) {\n            return (\n              (i % nRecsPerRow) * (recs.width + gridGap.x) + 0.15 * svg_width\n            );\n          })\n          .attr(\"y\", function (d, i) {\n            // console.log(Math.floor(i / 33));\n            return (\n              Math.floor(i / nRecsPerRow) * (recs.height + gridGap.y) +\n              0.15 * svg_width\n            );\n          });\n\n        // Hiding month labels\n        svg\n          .selectAll(\"text\")\n          .transition()\n          .duration(2000)\n          .attr(\"x\", -100)\n          .attr(\"y\", function (d, i) {\n            return 130 + i * 45;\n          });\n      }\n\n      setSortMethod(2);\n    }\n  }\n\n  function handleSortDay() {\n    // console.log(\"Sort Day\");\n\n    if (sortMethod !== 1) {\n      // If the setState already dumped the dvg data into our svg variable\n      if (svg) {\n        let svg_width = svg.style(\"width\").replace(\"px\", \"\");\n\n        svg\n          .selectAll(\"rect\")\n          .sort(function (x, y) {\n            return d3.ascending(x.day_number, y.day_number);\n          })\n          .transition()\n          .duration(2000)\n          .attr(\"width\", recs.width)\n          .attr(\"height\", recs.height)\n          .attr(\"x\", function (d, i) {\n            return (\n              (i % nRecsPerRow) * (recs.width + gridGap.x) + 0.15 * svg_width\n            );\n          })\n          .attr(\"y\", function (d, i) {\n            // console.log(Math.floor(i / 33));\n            return (\n              Math.floor(i / nRecsPerRow) * (recs.height + gridGap.y) +\n              0.15 * svg_width\n            );\n          });\n\n        // Hiding month labels\n        svg\n          .selectAll(\"text\")\n          .transition()\n          .duration(2000)\n          .attr(\"x\", -100)\n          .attr(\"y\", function (d, i) {\n            return 130 + i * 45;\n          });\n\n        setSortMethod(1);\n      }\n    }\n  }\n\n  function handleSortMonth() {\n    console.log(\"Sort Month\");\n\n    if (sortMethod !== 3) {\n      // If the setState already dumped the dvg data into our svg variable\n      if (svg) {\n        console.log(\"Group Month!\");\n\n        let svg_width = svg.style(\"width\").replace(\"px\", \"\");\n\n        svg\n          .selectAll(\"rect\")\n          .sort(function (x, y) {\n            return d3.ascending(x.day_number, y.day_number);\n          })\n          .transition()\n          .duration(2000)\n          .attr(\"width\", recs.width)\n          .attr(\"height\", recs.height)\n          .attr(\"x\", function (d, i) {\n            // This will be useful for knowing how to distribute the\n            //  squares in months. We'll need this logic becausse there are\n            //  leap years, where the month of February has 29 days.\n            let summedDaysPreviousMonth = 0;\n            for (let m = 1; m < d.month; m++) {\n              summedDaysPreviousMonth += monthsLength[m];\n            }\n\n            // January\n            if (d.month === 1) {\n              return (i % 6) * recs.width + 0.05 * svg_width;\n            }\n\n            // February\n            else if (d.month === 2) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                7 * recs.width\n              );\n            }\n\n            // March\n            else if (d.month === 3) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                14 * recs.width\n              );\n            }\n\n            // April\n            else if (d.month === 4) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                21 * recs.width\n              );\n            }\n\n            // May\n            else if (d.month === 5) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width\n              );\n            }\n\n            // Jun\n            else if (d.month === 6) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                7 * recs.width\n              );\n            }\n\n            // July\n            else if (d.month === 7) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                14 * recs.width\n              );\n            }\n\n            // August\n            else if (d.month === 8) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                21 * recs.width\n              );\n            }\n\n            // September\n            else if (d.month === 9) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width\n              );\n            }\n\n            // October\n            else if (d.month === 10) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                7 * recs.width\n              );\n            }\n\n            // November\n            else if (d.month === 11) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                14 * recs.width\n              );\n            }\n\n            // December\n            else if (d.month === 12) {\n              return (\n                ((i - summedDaysPreviousMonth) % 6) * recs.width +\n                0.05 * svg_width +\n                21 * recs.width\n              );\n            } else {\n              return 500;\n            }\n          })\n          .attr(\"y\", function (d, i) {\n            // This will be useful for knowing how to distribute the\n            //  squares in months. We'll need this logic becausse there are\n            //  leap years, where the month of February has 29 days.\n            let summedDaysPreviousMonth = 0;\n            for (let m = 1; m < d.month; m++) {\n              summedDaysPreviousMonth += monthsLength[m];\n            }\n\n            // January\n            if (d.month === 1) {\n              return Math.floor(i / 6) * recs.height + 0.05 * svg_width;\n            }\n\n            // February\n            else if (d.month === 2) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width\n              );\n            }\n\n            // March\n            else if (d.month === 3) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width\n              );\n            }\n\n            // April\n            else if (d.month === 4) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width\n              );\n            }\n\n            // May\n            else if (d.month === 5) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                9 * recs.height\n              );\n            }\n\n            // June\n            else if (d.month === 6) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                9 * recs.height\n              );\n            }\n\n            // July\n            else if (d.month === 7) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                9 * recs.height\n              );\n            }\n\n            // August\n            else if (d.month === 8) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                9 * recs.height\n              );\n            }\n\n            // September\n            else if (d.month === 9) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                18 * recs.height\n              );\n            }\n\n            // October\n            else if (d.month === 10) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                18 * recs.height\n              );\n            }\n\n            // November\n            else if (d.month === 11) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                18 * recs.height\n              );\n            }\n\n            // Dececmber\n            else if (d.month === 12) {\n              return (\n                Math.floor((i - summedDaysPreviousMonth) / 6) * recs.height +\n                0.05 * svg_width +\n                18 * recs.height\n              );\n            }\n          });\n\n        // Writing months names\n        svg\n          .selectAll(\"text\")\n          .transition()\n          .duration(2000)\n          .attr(\"x\", function (d, i) {\n            // if (d === \"January\") {\n            if (i === 0) {\n              return 0.05 * svg_width;\n              // } else if (d === \"February\") {\n            } else if (i === 1) {\n              return 0.05 * svg_width + 7 * recs.width;\n              // } else if (d === \"March\") {\n            } else if (i === 2) {\n              return 0.05 * svg_width + 14 * recs.width;\n              // } else if (d === \"April\") {\n            } else if (i === 3) {\n              return 0.05 * svg_width + 21 * recs.width;\n            }\n            // 2nd row\n            // else if (d === \"May\") {\n            else if (i === 4) {\n              return 0.05 * svg_width;\n              // } else if (d === \"June\") {\n            } else if (i === 5) {\n              return 0.05 * svg_width + 7 * recs.width;\n              // } else if (d === \"July\") {\n            } else if (i === 6) {\n              return 0.05 * svg_width + 14 * recs.width;\n              // } else if (d === \"August\") {\n            } else if (i === 7) {\n              return 0.05 * svg_width + 21 * recs.width;\n            }\n            // 3rd row\n            // else if (d === \"September\") {\n            else if (i === 8) {\n              return 0.05 * svg_width;\n              // } else if (d === \"October\") {\n            } else if (i === 9) {\n              return 0.05 * svg_width + 7 * recs.width;\n              // } else if (d === \"November\") {\n            } else if (i === 10) {\n              return 0.05 * svg_width + 14 * recs.width;\n              // } else if (d === \"December\") {\n            } else if (i === 11) {\n              return 0.05 * svg_width + 21 * recs.width;\n            }\n          })\n          .attr(\"y\", function (d, i) {\n            // if (d === \"January\") {\n            if (i === 0) {\n              return 0.05 * svg_width - 10;\n              // } else if (d === \"February\") {\n            } else if (i === 1) {\n              return 0.05 * svg_width - 10;\n              // } else if (d === \"March\") {\n            } else if (i === 2) {\n              return 0.05 * svg_width - 10;\n              // } else if (d === \"April\") {\n            } else if (i === 3) {\n              return 0.05 * svg_width - 10;\n            }\n\n            // 2nd row\n            // else if (d === \"May\") {\n            else if (i === 4) {\n              return 0.05 * svg_width + 9 * recs.height - 10;\n              // } else if (d === \"June\") {\n            } else if (i === 5) {\n              return 0.05 * svg_width + 9 * recs.height - 10;\n              // } else if (d === \"July\") {\n            } else if (i === 6) {\n              return 0.05 * svg_width + 9 * recs.height - 10;\n              // } else if (d === \"August\") {\n            } else if (i === 7) {\n              return 0.05 * svg_width + 9 * recs.height - 10;\n            }\n            // 3rd row\n            // else if (d === \"September\") {\n            else if (i === 8) {\n              return 0.05 * svg_width + 18 * recs.height - 10;\n              // } else if (d === \"October\") {\n            } else if (i === 9) {\n              return 0.05 * svg_width + 18 * recs.height - 10;\n              // } else if (d === \"November\") {\n            } else if (i === 10) {\n              return 0.05 * svg_width + 18 * recs.height - 10;\n              // } else if (d === \"December\") {\n            } else if (i === 11) {\n              return 0.05 * svg_width + 18 * recs.height - 10;\n            }\n          });\n      }\n\n      setSortMethod(3);\n    }\n  }\n\n  // function handleSlideChange(event) {\n  function handleSlideChange(min, max) {\n    // console.log(\"Slide changed: \" + event.target.value);\n\n    if (svg) {\n      // setIndexThreshold(event.target.value);\n\n      // Setting the filter variables\n      setFilterMin(min);\n      setFilterMax(max);\n\n      // This is the sample color to be displayed. So the user knows what she/he is filtering. What does 10% of cloud mean?? There's a need for a photo there.\n      // // Hard coding colors:\n      // const radiation_filter_factor = event.target.value;\n\n      // var color = [];\n      // if (radiation_filter_factor < 10) {\n      //   // 1.jpg\n      //   color = [100, 146, 230];\n      // } else if (\n      //   radiation_filter_factor >= 10 &&\n      //   radiation_filter_factor < 20\n      // ) {\n      //   // 2.jpg\n      //   color = [99, 143, 224];\n      // } else if (\n      //   radiation_filter_factor >= 20 &&\n      //   radiation_filter_factor < 30\n      // ) {\n      //   // 3.jpg\n      //   color = [96, 142, 214];\n      // } else if (\n      //   radiation_filter_factor >= 30 &&\n      //   radiation_filter_factor < 40\n      // ) {\n      //   // 4.jpg\n      //   color = [94, 138, 204];\n      // } else if (\n      //   radiation_filter_factor >= 40 &&\n      //   radiation_filter_factor < 50\n      // ) {\n      //   // 5.jpg\n      //   color = [94, 136, 193];\n      // } else if (\n      //   radiation_filter_factor >= 50 &&\n      //   radiation_filter_factor < 60\n      // ) {\n      //   // 6.jpg\n      //   color = [93, 131, 182];\n      // } else if (\n      //   radiation_filter_factor >= 60 &&\n      //   radiation_filter_factor < 70\n      // ) {\n      //   // 7.jpg\n      //   color = [93, 128, 170];\n      // } else if (\n      //   radiation_filter_factor >= 70 &&\n      //   radiation_filter_factor < 80\n      // ) {\n      //   // 8.jpg\n      //   color = [95, 124, 154];\n      // } else if (\n      //   radiation_filter_factor >= 80 &&\n      //   radiation_filter_factor < 90\n      // ) {\n      //   // 9.jpg\n      //   color = [97, 118, 138];\n      // } else if (radiation_filter_factor >= 90) {\n      //   // 10.jpg\n      //   color = [99, 112, 124];\n      // }\n      // // Updating the color of the sample\n      // document.getElementById(\"color_sample\").style.backgroundColor =\n      //   \"rgb(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \")\";\n\n      // Changing the colors of the squares\n      svg\n        .selectAll(\"rect\")\n        .transition()\n        .duration(800)\n        .attr(\"fill\", function (d, i) {\n          var cell_radiation_factor = Math.floor(d.c_index / 10) * 10;\n\n          var color = [];\n\n          // If the radiation value of the cell is smaller than the\n          //  radiation velue of the threshold (in the slide), we going\n          //  to fill it with black\n          // if (cell_radiation_factor > radiation_filter_factor) {\n          if (cell_radiation_factor < min || cell_radiation_factor > max) {\n            // color = [0, 0, 0];\n            color = [255, 255, 255];\n          }\n          // Otherwise we fill it with the proper color\n          else {\n            if (cell_radiation_factor < 10) {\n              // 1.jpg\n              color = [100, 146, 230];\n            } else if (\n              cell_radiation_factor >= 10 &&\n              cell_radiation_factor < 20\n            ) {\n              // 2.jpg\n              color = [99, 143, 224];\n            } else if (\n              cell_radiation_factor >= 20 &&\n              cell_radiation_factor < 30\n            ) {\n              // 3.jpg\n              color = [96, 142, 214];\n            } else if (\n              cell_radiation_factor >= 30 &&\n              cell_radiation_factor < 40\n            ) {\n              // 4.jpg\n              color = [94, 138, 204];\n            } else if (\n              cell_radiation_factor >= 40 &&\n              cell_radiation_factor < 50\n            ) {\n              // 5.jpg\n              color = [94, 136, 193];\n            } else if (\n              cell_radiation_factor >= 50 &&\n              cell_radiation_factor < 60\n            ) {\n              // 6.jpg\n              color = [93, 131, 182];\n            } else if (\n              cell_radiation_factor >= 60 &&\n              cell_radiation_factor < 70\n            ) {\n              // 7.jpg\n              color = [93, 128, 170];\n            } else if (\n              cell_radiation_factor >= 70 &&\n              cell_radiation_factor < 80\n            ) {\n              // 8.jpg\n              color = [95, 124, 154];\n            } else if (\n              cell_radiation_factor >= 80 &&\n              cell_radiation_factor < 90\n            ) {\n              // 9.jpg\n              color = [97, 118, 138];\n            } else if (cell_radiation_factor >= 90) {\n              // 10.jpg\n              color = [99, 112, 124];\n            }\n          }\n\n          return \"rgba(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \", 1)\";\n        });\n    }\n  }\n\n  function handlePlaySong() {\n    setSortMethod(4);\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"grid_controlers\">\n        <div className=\"buttons\">\n          <button\n            className={\n              sortMethod === 2\n                ? \"sortingButton selectedButton\"\n                : \"sortingButton\"\n            }\n            onClick={handleSortLight}\n          >\n            Sort Light\n          </button>\n          <button\n            className={\n              sortMethod === 1\n                ? \"sortingButton selectedButton\"\n                : \"sortingButton\"\n            }\n            onClick={handleSortDay}\n          >\n            Sort Date\n          </button>\n          <button\n            className={\n              sortMethod === 3\n                ? \"sortingButton selectedButton\"\n                : \"sortingButton\"\n            }\n            onClick={handleSortMonth}\n          >\n            Group Months\n          </button>\n          <button\n            className={\n              sortMethod === 4\n                ? \"sortingButton selectedButton musicSymbol\"\n                : \"sortingButton musicSymbol\"\n            }\n            onClick={handlePlaySong}\n          >\n            &#9835;\n          </button>\n        </div>\n\n        <div className=\"slidecontainer\">\n          <MultiRangeSlider min={0} max={100} onChange={handleSlideChange} />\n        </div>\n        {/* <div className=\"slidecontainer\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            defaultValue=\"100\"\n            className=\"slider\"\n            id=\"colorSlider\"\n            onInput={handleSlideChange}\n          />\n          <p id=\"slide_value_p\"> {indexThreshold}</p>\n          <div id=\"color_sample\"></div>\n        </div> */}\n      </div>\n\n      <div className=\"d3Container\">\n        <svg ref={d3Grid}></svg>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default D3YearGrid;\n"]},"metadata":{},"sourceType":"module"}