{"ast":null,"code":"var _jsxFileName = \"/Users/k1/Desktop/stockholm_sky/app/src/hooks/D3YearGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { getYear } from \"../services/cloud_data_functions\";\nimport \"../css/D3YearGrid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction D3YearGrid(props) {\n  _s();\n\n  const d3Grid = useRef();\n  const [data, setData] = useState([]); // 1 = day_number\n  // 2 = radiation/c_index\n  // 3 = months\n\n  const [sortMethod, setSortMethod] = useState(1);\n  useEffect(() => {\n    console.log(\"Inside D3YearGrid!\");\n    console.log(props.data);\n    console.log(\"year: \" + props.year); // // We need to query the data asyncronously because it might take a while to receive the data.\n    // let getDataFunction = async () => {\n    //   return getYear(props.year);\n    // };\n    // // When we are done getting the data, the function inside \".then()\" is executed.\n    // getDataFunction().then((values) => {\n    //   console.log(\"Inside getDataFunction!\");\n    //   console.log(values);\n    //   // Saving the data.\n    //   setData(getYear(props.year), () => {\n    //     console.log(\"data is now updated\");\n    //   });\n    //   const margin = { top: 10, right: 10, bottom: 10, left: 10 };\n    //   const width = parseInt(d3.select(\".d3Container\").style(\"width\"));\n    //   const height = parseInt(d3.select(\".d3Container\").style(\"height\"));\n    //   // set up the svg\n    //   const svg = d3\n    //     .select(d3Grid.current)\n    //     .attr(\"width\", width - margin.left - margin.right)\n    //     .attr(\"height\", height - margin.top - margin.bottom)\n    //     .attr(\"class\", \"D3Svg\")\n    //     // .append(\"g\")\n    //     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    //   var svg_width = width;\n    //   var n_recs_per_row = 20;\n    //   var rec_w = Math.floor((0.7 * svg_width) / n_recs_per_row);\n    //   var rec_h = rec_w;\n    //   console.log(data.data);\n    //   svg\n    //     .selectAll(\"rect\") // There's no 'rect' to select. But this is how we do to fill the svg with 'rects'.\n    //     .data(values.data) // here we load the data\n    //     .enter()\n    //     .append(\"rect\"); // .enter().append() -> for each datapoint in the dataset, add a 'rect'.\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d3Container\",\n    children: [\"hello from D3YearGrid\", /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: d3Grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(D3YearGrid, \"8y7ZJxxdaUbLx3gi4KUuKP0bsVU=\");\n\n_c = D3YearGrid;\nexport default D3YearGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"D3YearGrid\");","map":{"version":3,"sources":["/Users/k1/Desktop/stockholm_sky/app/src/hooks/D3YearGrid.jsx"],"names":["React","useEffect","useRef","useState","d3","getYear","D3YearGrid","props","d3Grid","data","setData","sortMethod","setSortMethod","console","log","year"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,OAAO,uBAAP;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,MAAM,GAAGN,MAAM,EAArB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAFyB,CAGzB;AACA;AACA;;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACE,IAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,KAAK,CAACQ,IAA7B,EAHc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAvCQ,EAuCN,EAvCM,CAAT;AAyCA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,qDAEE;AAAK,MAAA,GAAG,EAAEP;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvDQF,U;;KAAAA,U;AAyDT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nimport { getYear } from \"../services/cloud_data_functions\";\n\nimport \"../css/D3YearGrid.css\";\n\nfunction D3YearGrid(props) {\n  const d3Grid = useRef();\n  const [data, setData] = useState([]);\n  // 1 = day_number\n  // 2 = radiation/c_index\n  // 3 = months\n  const [sortMethod, setSortMethod] = useState(1);\n\n  useEffect(() => {\n    console.log(\"Inside D3YearGrid!\");\n    console.log(props.data);\n    console.log(\"year: \" + props.year);\n\n    // // We need to query the data asyncronously because it might take a while to receive the data.\n    // let getDataFunction = async () => {\n    //   return getYear(props.year);\n    // };\n    // // When we are done getting the data, the function inside \".then()\" is executed.\n    // getDataFunction().then((values) => {\n    //   console.log(\"Inside getDataFunction!\");\n    //   console.log(values);\n    //   // Saving the data.\n    //   setData(getYear(props.year), () => {\n    //     console.log(\"data is now updated\");\n    //   });\n    //   const margin = { top: 10, right: 10, bottom: 10, left: 10 };\n    //   const width = parseInt(d3.select(\".d3Container\").style(\"width\"));\n    //   const height = parseInt(d3.select(\".d3Container\").style(\"height\"));\n    //   // set up the svg\n    //   const svg = d3\n    //     .select(d3Grid.current)\n    //     .attr(\"width\", width - margin.left - margin.right)\n    //     .attr(\"height\", height - margin.top - margin.bottom)\n    //     .attr(\"class\", \"D3Svg\")\n    //     // .append(\"g\")\n    //     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    //   var svg_width = width;\n    //   var n_recs_per_row = 20;\n    //   var rec_w = Math.floor((0.7 * svg_width) / n_recs_per_row);\n    //   var rec_h = rec_w;\n    //   console.log(data.data);\n    //   svg\n    //     .selectAll(\"rect\") // There's no 'rect' to select. But this is how we do to fill the svg with 'rects'.\n    //     .data(values.data) // here we load the data\n    //     .enter()\n    //     .append(\"rect\"); // .enter().append() -> for each datapoint in the dataset, add a 'rect'.\n    // });\n  }, []);\n\n  return (\n    <div className=\"d3Container\">\n      hello from D3YearGrid\n      <svg ref={d3Grid}></svg>\n    </div>\n  );\n}\n\nexport default D3YearGrid;\n"]},"metadata":{},"sourceType":"module"}