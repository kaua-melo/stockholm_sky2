{"ast":null,"code":"var _jsxFileName = \"/Users/k1/Desktop/stockholm_sky/app/src/hooks/D3YearGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { getYear } from \"../services/cloud_data_functions\";\nimport \"../css/D3YearGrid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction D3YearGrid(props) {\n  _s();\n\n  const d3Grid = useRef();\n  const [data, setData] = useState([]); // 1 = day_number\n  // 2 = radiation/c_index\n  // 3 = months\n\n  const [sortMethod, setSortMethod] = useState(1);\n  useEffect(() => {\n    console.log(\"Inside D3YearGrid!\");\n    console.log(props.data);\n    console.log(\"year: \" + props.year);\n    const margin = {\n      top: 10,\n      right: 10,\n      bottom: 10,\n      left: 10\n    };\n    const width = parseInt(d3.select(\".d3Container\").style(\"width\"));\n    const height = parseInt(d3.select(\".d3Container\").style(\"height\")); // set up the svg\n\n    const svg = d3.select(d3Grid.current).attr(\"width\", width - margin.left - margin.right).attr(\"height\", height - margin.top - margin.bottom).attr(\"class\", \"D3Svg\") // .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var svg_width = width;\n    var n_recs_per_row = 20;\n    var rec_w = Math.floor(0.7 * svg_width / n_recs_per_row);\n    var rec_h = rec_w; // Add the rectangles\n\n    svg.selectAll(\"rect\") // There's no 'rect' to select. But this is how we do to fill the svg with 'rects'.\n    .data(props.data) // here we load the data\n    .enter().append(\"rect\") // .enter().append() -> for each datapoint in the dataset, add a 'rect'.\n    .attr(\"width\", rec_w).attr(\"height\", rec_h).attr(\"x\", function (d, i) {\n      return i % n_recs_per_row * rec_w + 0.15 * svg_width;\n    }).attr(\"y\", function (d, i) {\n      return Math.floor(i / n_recs_per_row) * rec_h + 0.15 * svg_width;\n    }).attr(\"fill\", function (d, i) {\n      var bright_color = [100, 146, 230];\n      var dark_color = [99, 112, 124];\n      var factor = Math.floor(d.c_index / 10) * 10; // console.log(\"c_index: \" + d.c_index);\n      // console.log(\"Math.floor(d.c_index / 10): \" + Math.floor(d.c_index / 10));\n      // console.log(\"factor: \" + factor);\n      // var color = [\n      //   bright_color[0] - (factor / 100) * (bright_color[0] - dark_color[0]),\n      //   bright_color[1] - (factor / 100) * (bright_color[1] - dark_color[1]),\n      //   bright_color[2] - (factor / 100) * (bright_color[2] - dark_color[2]),\n      // ];\n      // hard coding colors:\n\n      var color = [];\n\n      if (factor < 10) {\n        // 1.jpg\n        color = [100, 146, 230];\n      } else if (factor >= 10 && factor < 20) {\n        // 2.jpg\n        color = [99, 143, 224];\n      } else if (factor >= 20 && factor < 30) {\n        // 3.jpg\n        color = [96, 142, 214];\n      } else if (factor >= 30 && factor < 40) {\n        // 4.jpg\n        color = [94, 138, 204];\n      } else if (factor >= 40 && factor < 50) {\n        // 5.jpg\n        color = [94, 136, 193];\n      } else if (factor >= 50 && factor < 60) {\n        // 6.jpg\n        color = [93, 131, 182];\n      } else if (factor >= 60 && factor < 70) {\n        // 7.jpg\n        color = [93, 128, 170];\n      } else if (factor >= 70 && factor < 80) {\n        // 8.jpg\n        color = [95, 124, 154];\n      } else if (factor >= 80 && factor < 90) {\n        // 9.jpg\n        color = [97, 118, 138];\n      } else if (factor >= 90) {\n        // 10.jpg\n        color = [99, 112, 124];\n      } // console.log(color);\n      // console.log(\"---\");\n      // return \"rgb(\" + d.c_index + \", 40, 205)\";\n\n\n      return \"rgba(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \", 1)\";\n    }).html(function (d, i) {\n      return d.day_number;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d3Container\",\n    children: [\"hello from D3YearGrid\", /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: d3Grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(D3YearGrid, \"8y7ZJxxdaUbLx3gi4KUuKP0bsVU=\");\n\n_c = D3YearGrid;\nexport default D3YearGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"D3YearGrid\");","map":{"version":3,"sources":["/Users/k1/Desktop/stockholm_sky/app/src/hooks/D3YearGrid.jsx"],"names":["React","useEffect","useRef","useState","d3","getYear","D3YearGrid","props","d3Grid","data","setData","sortMethod","setSortMethod","console","log","year","margin","top","right","bottom","left","width","parseInt","select","style","height","svg","current","attr","svg_width","n_recs_per_row","rec_w","Math","floor","rec_h","selectAll","enter","append","d","i","bright_color","dark_color","factor","c_index","color","html","day_number"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\n\nimport { getYear } from \"../services/cloud_data_functions\";\n\nimport \"../css/D3YearGrid.css\";\n\nfunction D3YearGrid(props) {\n  const d3Grid = useRef();\n  const [data, setData] = useState([]);\n  // 1 = day_number\n  // 2 = radiation/c_index\n  // 3 = months\n  const [sortMethod, setSortMethod] = useState(1);\n\n  useEffect(() => {\n    console.log(\"Inside D3YearGrid!\");\n    console.log(props.data);\n    console.log(\"year: \" + props.year);\n\n    const margin = { top: 10, right: 10, bottom: 10, left: 10 };\n    const width = parseInt(d3.select(\".d3Container\").style(\"width\"));\n    const height = parseInt(d3.select(\".d3Container\").style(\"height\"));\n\n    // set up the svg\n    const svg = d3\n      .select(d3Grid.current)\n      .attr(\"width\", width - margin.left - margin.right)\n      .attr(\"height\", height - margin.top - margin.bottom)\n      .attr(\"class\", \"D3Svg\")\n      // .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var svg_width = width;\n    var n_recs_per_row = 20;\n    var rec_w = Math.floor((0.7 * svg_width) / n_recs_per_row);\n    var rec_h = rec_w;\n\n    // Add the rectangles\n    svg\n      .selectAll(\"rect\") // There's no 'rect' to select. But this is how we do to fill the svg with 'rects'.\n      .data(props.data) // here we load the data\n      .enter()\n      .append(\"rect\") // .enter().append() -> for each datapoint in the dataset, add a 'rect'.\n      .attr(\"width\", rec_w)\n      .attr(\"height\", rec_h)\n      .attr(\"x\", function (d, i) {\n        return (i % n_recs_per_row) * rec_w + 0.15 * svg_width;\n      })\n      .attr(\"y\", function (d, i) {\n        return Math.floor(i / n_recs_per_row) * rec_h + 0.15 * svg_width;\n      })\n      .attr(\"fill\", function (d, i) {\n        var bright_color = [100, 146, 230];\n        var dark_color = [99, 112, 124];\n\n        var factor = Math.floor(d.c_index / 10) * 10;\n        // console.log(\"c_index: \" + d.c_index);\n        // console.log(\"Math.floor(d.c_index / 10): \" + Math.floor(d.c_index / 10));\n        // console.log(\"factor: \" + factor);\n\n        // var color = [\n        //   bright_color[0] - (factor / 100) * (bright_color[0] - dark_color[0]),\n        //   bright_color[1] - (factor / 100) * (bright_color[1] - dark_color[1]),\n        //   bright_color[2] - (factor / 100) * (bright_color[2] - dark_color[2]),\n        // ];\n\n        // hard coding colors:\n        var color = [];\n        if (factor < 10) {\n          // 1.jpg\n          color = [100, 146, 230];\n        } else if (factor >= 10 && factor < 20) {\n          // 2.jpg\n          color = [99, 143, 224];\n        } else if (factor >= 20 && factor < 30) {\n          // 3.jpg\n          color = [96, 142, 214];\n        } else if (factor >= 30 && factor < 40) {\n          // 4.jpg\n          color = [94, 138, 204];\n        } else if (factor >= 40 && factor < 50) {\n          // 5.jpg\n          color = [94, 136, 193];\n        } else if (factor >= 50 && factor < 60) {\n          // 6.jpg\n          color = [93, 131, 182];\n        } else if (factor >= 60 && factor < 70) {\n          // 7.jpg\n          color = [93, 128, 170];\n        } else if (factor >= 70 && factor < 80) {\n          // 8.jpg\n          color = [95, 124, 154];\n        } else if (factor >= 80 && factor < 90) {\n          // 9.jpg\n          color = [97, 118, 138];\n        } else if (factor >= 90) {\n          // 10.jpg\n          color = [99, 112, 124];\n        }\n\n        // console.log(color);\n        // console.log(\"---\");\n\n        // return \"rgb(\" + d.c_index + \", 40, 205)\";\n        return \"rgba(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \", 1)\";\n      })\n      .html(function (d, i) {\n        return d.day_number;\n      });\n  }, []);\n\n  return (\n    <div className=\"d3Container\">\n      hello from D3YearGrid\n      <svg ref={d3Grid}></svg>\n    </div>\n  );\n}\n\nexport default D3YearGrid;\n"]},"metadata":{},"sourceType":"module"}