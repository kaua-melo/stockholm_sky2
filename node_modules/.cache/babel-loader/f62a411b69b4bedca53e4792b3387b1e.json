{"ast":null,"code":"var _jsxFileName = \"/Users/k1/Desktop/stockholm_sky/app/src/hooks/yearPanelSmall.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport YearGridSmall from \"./yearGridSmall\";\nimport \"../css/yearPanelSmall.css\";\nimport D3YearGrid from \"./D3YearGrid\";\nimport { getYear } from \"../services/cloud_data_functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction YearPanelSmall(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // // We need to query the data asyncronously because it might take a while to receive the data.\n    // let getDataFunction = async () => {\n    //   return getYear(props.year);\n    // };\n    // // When we are done getting the data, the function inside \".then()\" is executed.\n    // getDataFunction().then((values) => {\n    //   // Saving the data.\n    //   setData(values);\n    // });\n    async function getData() {\n      const result = await getYear(props.year);\n      setData(result.data);\n    }\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"yearPanelSmallDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid_controlers\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortLight,\n        children: \"Sort Light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortDay,\n        children: \"Sort Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortMonth,\n        children: \"Group Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slidecontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          defaultValue: \"100\",\n          className: \"slider\",\n          id: \"colorSlider\",\n          onInput: handleSlideChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"slide_value_p\",\n          children: \" 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"color_sample\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"year\",\n        children: props.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" x \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(D3YearGrid, {\n        data: data,\n        year: props.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(YearPanelSmall, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = YearPanelSmall;\nexport default YearPanelSmall;\n\nvar _c;\n\n$RefreshReg$(_c, \"YearPanelSmall\");","map":{"version":3,"sources":["/Users/k1/Desktop/stockholm_sky/app/src/hooks/yearPanelSmall.jsx"],"names":["React","Fragment","useState","useEffect","YearGridSmall","D3YearGrid","getYear","YearPanelSmall","props","data","setData","getData","result","year","handleSortLight","handleSortDay","handleSortMonth","handleSlideChange","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,2BAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,kCAAxB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBAAeQ,OAAf,GAAyB;AACvB,YAAMC,MAAM,GAAG,MAAMN,OAAO,CAACE,KAAK,CAACK,IAAP,CAA5B;AACAH,MAAAA,OAAO,CAACE,MAAM,CAACH,IAAR,CAAP;AACD;;AAEDE,IAAAA,OAAO;AACR,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,GAAG,EAAC,GAFN;AAGE,UAAA,GAAG,EAAC,KAHN;AAIE,UAAA,YAAY,EAAC,KAJf;AAKE,UAAA,SAAS,EAAC,QALZ;AAME,UAAA,EAAE,EAAC,aANL;AAOE,UAAA,OAAO,EAAEC;AAPX;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAG,UAAA,EAAE,EAAC,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,kBAAsBT,KAAK,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eA2BE;AAAA,gBAIGJ,IAAI,CAACS,MAAL,GAAc,CAAd,gBACC,QAAC,UAAD;AAAY,QAAA,IAAI,EAAET,IAAlB;AAAwB,QAAA,IAAI,EAAED,KAAK,CAACK;AAApC;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GA9DQN,c;;KAAAA,c;AAgET,eAAeA,cAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport YearGridSmall from \"./yearGridSmall\";\nimport \"../css/yearPanelSmall.css\";\nimport D3YearGrid from \"./D3YearGrid\";\nimport { getYear } from \"../services/cloud_data_functions\";\n\nfunction YearPanelSmall(props) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // // We need to query the data asyncronously because it might take a while to receive the data.\n    // let getDataFunction = async () => {\n    //   return getYear(props.year);\n    // };\n    // // When we are done getting the data, the function inside \".then()\" is executed.\n    // getDataFunction().then((values) => {\n    //   // Saving the data.\n    //   setData(values);\n    // });\n\n    async function getData() {\n      const result = await getYear(props.year);\n      setData(result.data);\n    }\n\n    getData();\n  }, []);\n\n  return (\n    <div className=\"yearPanelSmallDiv\">\n      <div className=\"grid_controlers\">\n        <button onClick={handleSortLight}>Sort Light</button>\n        <button onClick={handleSortDay}>Sort Date</button>\n        <button onClick={handleSortMonth}>Group Months</button>\n\n        <div className=\"slidecontainer\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            defaultValue=\"100\"\n            className=\"slider\"\n            id=\"colorSlider\"\n            onInput={handleSlideChange}\n          />\n          <p id=\"slide_value_p\"> 100</p>\n          <div id=\"color_sample\"></div>\n        </div>\n      </div>\n\n      <div className=\"header\">\n        <h4 className=\"year\">{props.year}</h4>\n        <button> x </button>\n        <button> > </button>\n      </div>\n\n      <div>\n        {/* <YearGridSmall year={props.year} /> */}\n        {/* It takes a while for the data to be set by using setState.\n            Because of that we need to check whether it's bigger than 0 first, then we render it */}\n        {data.length > 0 ? (\n          <D3YearGrid data={data} year={props.year} />\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default YearPanelSmall;\n"]},"metadata":{},"sourceType":"module"}